%\VignetteIndexEntry{Bioconductor LaTeX Style 2.0}
%\VignettePackage{BiocStyle}
%\VignetteEngine{utils::Sweave}

\documentclass{article}

%usepackage{Sweave}
<<style, eval=TRUE, echo=FALSE, results=tex>>=
BiocStyle::latex2()
@ 

\newcommand\BiocStyle{\Rpackage{BiocStyle}}
\newcommand\knitr{\Rpackage{knitr}}
\newcommand\rmarkdown{\Rpackage{rmarkdown}}
\newcommand\Sweave{\software{Sweave}}
\newcommand\latex[1]{{\ttfamily #1}}

\newcommand{\exitem}[3]{%
  \item \latex{\textbackslash#1\{#2\}} #3 \csname#1\endcsname{#2}.%
}

\title{\Bioconductor\ \LaTeX\ Style 2.0}
\author{Andrzej Ole\'s, Martin Morgan, Wolfgang Huber}

\begin{document}

\maketitle

\tableofcontents

\newpage

\section{Authoring package vignettes}

\subsection{Getting started}

\BiocStyle\ provides a standard formatting style for documents which are rendered
to PDF output format. It consists of a \LaTeX\ style definition which
can be used with either plain \Sweave, \knitr, or R markdown documents. 
Follow the instructions below on how to enable \BiocStyle\ depending on your document input format.

\subsubsection{Sweave}

To use with Sweave, add the following to your package \file{DESCRIPTION} file:
\begin{verbatim}
    Suggests: BiocStyle
\end{verbatim}
and add this code chunk to the preamble (before the \verb+\begin{document}+ latex
command, preferably right after the \verb+\documentclass+ definition) of your \texttt{.Rnw} file:
\begin{verbatim}
    <<style-Sweave, eval=TRUE, echo=FALSE, results=tex>>=
    BiocStyle::latex2()
    @ 
\end{verbatim}

See \Rcode{?latex} for additional options. It is not necessary to include
\verb+\usepackage{Sweave}+ in your document preamble, as it is already inserted by \BiocStyle.
See Appendix~\ref{sec:pkgs} for a list of other automatically attached \LaTeX\ packages.

\subsubsection{\knitr{}}

To use with \CRANpkg{knitr}, add the following to the \file{DESCRIPTION} file:
\begin{verbatim}
    VignetteBuilder: knitr
    Suggests: BiocStyle, knitr
\end{verbatim}
this to the top of the \texttt{.Rnw} file:
\begin{verbatim}
    %\VignetteEngine{knitr::knitr}
\end{verbatim}
and this to the preamble:
\begin{verbatim}
    <<style-knitr, eval=TRUE, echo=FALSE, results="asis">>=
    BiocStyle::latex2()
    @ 
\end{verbatim}

See \Rcode{?latex} for additional options, and Appendix~\ref{sec:pkgs} for a list of automatically attached \LaTeX\ packages.

\subsubsection{R markdown}

To enable \BiocStyle\ in your R markdown (`.Rmd`) vignette you need to:

\begin{enumerate}
  
  \item Edit to the `DESCRIPTION` file by adding

  \begin{verbatim}
    VignetteBuilder: knitr
    Suggests: BiocStyle, knitr, rmarkdown
  \end{verbatim}
    
  \item Specify \verb+BiocStyle::pdf_document+ as the output format and add vignette metadata in the document header:

  \begin{verbatim}
    ---
    title: "Vignette Title"
    author: "Vignette Author"
    output: 
      BiocStyle::pdf_document
    vignette: >
      %\VignetteIndexEntry{Vignette Title}
      %\VignetteEngine{knitr::rmarkdown}
      %\VignetteEncoding{UTF-8}  
    ---
  \end{verbatim}
  
\end{enumerate}
  
The \verb+vignette+ section is required in order to instruct R how to build the vignette. Note that the \verb+\VignetteIndexEntry+ should match the \verb+title+ of your vignette.
  
See the \emph{Bioconductor R markdown style} package vignette for
more details on authoring R markdown documents with \BiocStyle.


\subsection{Workflow}

Provided that \BiocStyle\ has been installed, a convenient way to build the
vignette as it is being written is with the command
\begin{verbatim}
    R CMD Sweave --pdf vignette.Rnw
\end{verbatim}
A short-cut useful for checking the \LaTeX{} portion of vignettes is
to toggle evaluation of code chunks to \Rcode{FALSE}
\begin{verbatim}
    SWEAVE_OPTIONS="eval=FALSE" R CMD Sweave --pdf vignette.Rnw
\end{verbatim}
When using \knitr, the command to process the vignette is
\begin{verbatim}
    R CMD Sweave --engine=knitr::knitr --pdf vignette.Rnw
\end{verbatim}
For R markdown vignettes, set the engine to \verb+knitr::rmarkdown+:
\begin{verbatim}
    R CMD Sweave --engine=knitr::rmarkdown --pdf vignette.Rmd
\end{verbatim}

By default, \knitr\ automatically caches results of vignette
chunks, greatly accelerating the turnaround time required for
edits. Both the default and \knitr\ incantations create PDF
files using \software{texi2dvi --pdf}; many versions of this software
incorrectly display non-breaking spaces as a tilde, \verb|~|. This can be
remedied (as on the \Bioconductor{} build system) with a final run of
\begin{verbatim}
    R CMD texi2dvi --pdf vignette.tex
    R CMD pdflatex vignette.tex
\end{verbatim}

\section{Structuring your document}

\subsection{Title, author, and running headers}

Create a title and running headers by defining the \verb+\bioctitle+
and \verb+\author+ commands in the preamble
\begin{verbatim}
    \bioctitle[Short title for headers]{Full title for title page}
    %% also: \bioctitle{Title used for both header and title page} 
    %% or... \title{Title used for both header and title page} 
    \author{Vignette Author\thanks{\email{user@domain.com}}}
\end{verbatim}
and use \verb+\maketitle+ at the start of the document to output the title and author information.

As illustrated above, email addresses can be entered
with the \verb+\email+ command which creates a hyperlinked email address
typeset in monospace font. Author affiliations can be specified with the \verb+\affil+ command
provided by the \LaTeX\ package \latex{authblk}, which is automatically loaded by \BiocStyle.
See the following examples for typical use cases. 

Important: most of the methods described below will only work once \BiocStyle\ has been loaded;
therefore, specify authors \emph{after} the code chunk calling \Rcode{BiocStyle::latex2()}.

\subsubsection{Single author}

This is not different from the standard \LaTeX\ syntax. Use the \verb+\author+
command to enter the author and affiliation information separated by a new line.
You can enter the email in another new line after after the affiliation, or use
the \verb+\thanks+ command.

\begin{verbatim}
    \author{Vignette Author\thanks{\email{authors@email.com}} \\ Affiliation}
\end{verbatim}

\subsubsection{Multiple authors}

You can specify the author and affiliation information in different manners depending on 
the number of affiliations. In the basic case, when you don't provide authors'
affiliation, or all the authors share the same affiliation, you can stick to regular \LaTeX\ syntax and have

\begin{verbatim}
\author{
  First Author\thanks{\email{first@author.com}},
  Second Author\thanks{\email{second@author.com}}\\
  Shared Affiliation
}
\end{verbatim}

To provide different affiliations, some of which are potentially being shared, 
enter each author in a separate \verb+\author+ command and use \verb+\affil+
to specify affiliation.  The authors  will appear all in one (possibly continued) line
with automatic footnotes, and the affiliations are displayed in separate lines below.

\begin{verbatim}
    \author{First Author}
    \author{Second Author}
    \affil{First and Second authors' shared affiliation}
    \author{Third Author\thanks{\email{corresponding@author.com}}}
    \affil{Third author's affiliation}
\end{verbatim}

In the case when some authors have more than one affiliation, or the authors with 
a shared affiliation does not come one after another, you need to manually define
footnote markers as optional arguments to the \verb+\auth+ and \verb+affil+ commands, as in the following example.

\begin{verbatim}
    \author[1,2]{First Author\thanks{\email{first@author.com}}}
    \author[1]{Second Author}
    \author[2]{Third Author}
    \affil[1]{First and Second authors' affiliation}
    \affil[2]{First and Third authors' affiliation}
\end{verbatim}


\subsection{Abstract, package version, and table of contents}

Abstract can be entered using the standard \verb+abstract+ environment:

\begin{verbatim}
    \begin{abstract}
      Short summary of the vignette's content.
    \end{abstract}
\end{verbatim}

In package vignettes it is recommended to include information on the specific 
package version used to compile the document. Use the following line to include
this information automatically and in a properly formatted manner (substitute 
\verb+packageName+ by the name of your package).

\verb|    \packageVersion{\|\verb|Sexpr{BiocStyle::pkg_ver("packageName")}}|

Use \verb+\tableofcontents+ to include a hyperlinked table of contents (TOC), and
\verb+\section+, \verb+\subsection+, \verb+\subsubsection+ for
structuring your vignette. Usually, it's a good idea to start the first section
on a new page by calling \verb+\newpage+ after the TOC:

\begin{verbatim}
    \tableofcontents
    \newpage
    \section{My First Section}
\end{verbatim}

\subsection{Style macros}
\Biocpkg{BiocStyle} introduces the following additional markup styling commands
useful in typical \Bioconductor{} vignettes.\\\\
%%
Software:
\begin{itemize}
  \item \verb+\R{}+ and \verb+\Bioconductor{}+ to reference \R{} software and
  the \Bioconductor{} project.
  \exitem{software}{GATK}{to reference third-party software, e.g.,}
\end{itemize}
%\vspace{1em}
%%
Packages:
\begin{itemize}
  \exitem{Biocpkg}{IRanges}{for \Bioconductor{} software, annotation and experiment data packages, including a
  link to the release landing page or if the package is only in devel, to the devel landing page.}
  \exitem{CRANpkg}{data.table}{for \R{} packages available on CRAN, including
  a link to the FHCRC CRAN mirror landing page,}
  \exitem{Githubpkg}{rstudio/rmarkdown}{for \R{} packages available on GitHub, including a link to the package repository,}
  \exitem{Rpackage}{MyPkg}{for \R{} packages that are \emph{not} available on
  \Bioconductor{} or CRAN,}
\end{itemize}
%\vspace{1em}
%%
Code:
\begin{itemize}
  \exitem{Rfunction}{findOverlaps}{for functions}
  \exitem{Robject}{olaps}{for variables}
  \exitem{Rclass}{GRanges}{when referring to a formal class}
  \exitem{Rcode}{log(x)}{for \R{} code,}
\end{itemize}
%\vspace{1em}
%%
Communication:
\begin{itemize}
  \exitem{bioccomment}{additional information for the user}{communicates}
  \exitem{warning}{common pitfalls}{signals}
  \exitem{fixme}{incomplete functionality}{provides an indication of}
\end{itemize}
%\vspace{1em}
%%
General:
\begin{itemize}
  \exitem{email}{user@domain.com}{to provide a linked email address,}
  \exitem{file}{script.R}{for file names and file paths}
\end{itemize}

\subsection{Code chunks}

%\BiocStyle\ changes the default setting of the \verb+error+ option

The line length \Rcode{option("width")} is automatically adjusted
depending on the document's font size setting. Therefore, it shouldn't be necessary to set it manually.
If for some reason you wish to alter it, use the \Rcode{width} argument in the call to  \Rfunction{latex2}, e.g.

<<width, eval=FALSE>>=
    BiocStyle::latex2(width=70)
@


%---------------------------------------------------------
\subsection{Figures}\label{incfig}
%---------------------------------------------------------

\BiocStyle\ defines 3 types of figure environments, which differ in size, 
default aspect ratio, and horizontal placement on the the page.

\begin{table*}
\begin{tabular}{l|l|l|l|l}
environment & description & output width & device dimensions & aspect ratio\\
%\hrule
\latex{figure} & regular figure & 10mm & 7.5in x 5.0in & 1.5:1\\
\latex{figure*} & wide figure & 120mm & 10.0in x 5.0in & 2:1\\
\latex{smallfigure} & small figure & 65mm & 5.0in x 5.0in & 1:1 \\
\end{tabular}
%\caption{ \Latex\ figure environments}
\end{table*}

In \knitr\ and \rmarkdown\ the output environment for a graphics-producing code
chunk can be specified in the \Rcode{fig.env} chunk option, e.g. set 
\Rcode{fig.env='smallfigure'} to get \verb+\begin{smallfigure}+.

Besides the usual \LaTeX{} capabilities (\verb+figure+ environment and
\verb+\includegraphics+ command), \file{Bioconductor.sty} defines a
macro \verb+\incfig[placement]{filename}{width}{shorttitle}{extendedcaption}+,
which expects four arguments:
\begin{description}%[font=\texttt]
\item[filename] The name of the figure file, also used as the label by
  which the float can be referred to by \verb+\ref{}+. Some
  \software{Sweave} and \CRANpkg{knitr} options place figures in a
  subdirectory; unless \Rcode{short.fignames=TRUE} is set the full file name,
  including the subdirectory and any prefixes, should be provided. By default,
  these are \file{<sweavename>-} for \Rpackage{Sweave} and \file{figure/} for
  \CRANpkg{knitr}. Please note the different naming scheme used by
  \Rpackage{knitr}: figure files are named \file{<chunkname>-i} where \emph{i}
  is the number of the plot generated in the chunk. 
\item[width] Figure width.
\item[shorttitle] A short description, used in the list of figures and
  printed in bold as the first part of the caption.
\item[extendedcaption] Continuation of the figure caption.
\end{description}
The optional \textbf{placement} specifier controls where the figure is placed
on page and takes the usual values allowed by \LaTeX{} floats, i.e., a list
containing \verb+t+, \verb+b+, \verb+p+, or \verb+h+, where letters enumerate
permitted placements. If no placement specifier is given, the default
\verb+tbp+ is assumed.

For \verb+incfig+ with Sweave, use
\begin{verbatim}
    <<figureexample, fig=TRUE, include=FALSE, width=4.2, height=4.6>>=
    v = seq(0, 60i, length=1000)
    plot(abs(v)*exp(v), type="l", col="Royalblue")
    @
    \incfig{LatexStyle-figureexample}{0.5\textwidth}{A curve.}
      {The code that creates this figure is shown in the code chunk.}
    as shown in Figure~\ref{LatexStyle-figureexample}.
\end{verbatim}
This results in
<<figureexample, fig=TRUE, include=FALSE, width=4.2, height=4.6>>=
v = seq(0, 60i, length=1000)
plot(abs(v)*exp(v), type="l", col="Royalblue")
@

\incfig{LatexStyle-figureexample}{0.5\textwidth}{A curve.}
  {The code that creates this figure is shown in the code chunk.}
as shown in Figure~\ref{LatexStyle-figureexample}.  When the option
\Rcode{short.fignames} is set to \Rcode{TRUE}, figure names used by
\verb+\incfig+ and \verb+\ref+ do not contain any prefix and are
identical to the corresponding code chunk labels (plus figure number in case of
\Rpackage{knitr}). For example, in Sweave the respective code for the above
example would be \verb+\incfig{figureexample}{...}{...}{...}+ and
\verb+\ref{figureexample}+, while in \Rpackage{knitr} these are expected to be
\verb+\incfig{figureexample-1}{...}{...}{...}+ and
\verb+\ref{figureexample-1}+.

For \verb+\incfig+ with \Rpackage{knitr}, use the option
\Rcode{fig.show='hide'} rather than \Rcode{include=FALSE}. The
\Rpackage{knitr}-equivalent code for
Figure~\ref{LatexStyle-figureexample} is:
\begin{verbatim}
    <<figureexample, fig.show='hide', fig.width=4.2, fig.height=4.6>>=
    v = seq(0, 60i, length=1000)
    plot(abs(v)*exp(v), type="l", col="Royalblue")
    @
\end{verbatim}
Note the difference in option names setting the figure width and
height compared to \Rpackage{Sweave}.  Unless
\Rcode{short.fignames=TRUE} is set, use the default \file{figure/}
prefix when inserting and referring to figures, e.g.:
\begin{verbatim}
    \incfig{figure/figureexample-1}{0.5\textwidth}{A curve.}
      {The code that creates this figure is shown in the code chunk.}
\end{verbatim}
A custom prefix for figure file names can be passed to
\Rfunction{latex} using the \Rcode{fig.path} option. When
\Rcode{short.fignames=TRUE}, figures can be referred to directly by
code chunk labels, as described earlier in this section.

%---------------------------------------------------------
\section{Bibliography}
%---------------------------------------------------------

\Rcode{BiocStyle::latex()} has default argument
\Rcode{use.unsrturl=TRUE} to automatically format bibliographies using
\software{natbib}'s unsrturl style. There is no need to explicitly
include \software{natbib}, and it is an error to use a
\verb+\bibliographystyle+ command. The \software{unsrturl.bst} format,
e.g., \cite{Gentleman:2004, 10.1371/journal.pcbi.1003118}, supports
hyperlinks to DOI and PubMed IDs but not \verb+\citet+ or
\verb+\citep+.

To use a bibliography style different from \verb+unsrturl+, set
\Rcode{use.unsrturl=FALSE} and follow normal \LaTeX{} conventions.


\bibliography{Bioc}

\appendix

%---------------------------------------------------------
\section{Session info}
%---------------------------------------------------------

Here is the output of \Rfunction{sessionInfo()} on the system on which
this document was compiled:
<<sessionInfo, results=tex, echo=FALSE>>=
toLatex(sessionInfo())
@

\section{Attached \LaTeX\ packages}\label{sec:pkgs}

<<latexPkgs, echo=FALSE>>=
bioconductor.sty = readLines(BiocStyle:::bioconductor2.sty)
pattern = "^\\\\RequirePackage(\\[.*\\])?\\{([[:alnum:]]+)\\}.*"
pkgs = sub(pattern, "\\2", grep(pattern, bioconductor.sty, value = TRUE))
#sort and add hyperref which is not captured by the regex
pkgs = sort(unique(c(pkgs, "hyperref")))
latexpkgs = paste0("\\\\latex{", pkgs, "}", collapse=", ")
@

\BiocStyle\ loads the following \LaTeX\ packages: \Sexpr{latexpkgs}.


\section{Known issues}

\subsection{Use with \LaTeX\ package \latex{float}}

The current implementation of \BiocStyle\ is not compatible with the \LaTeX\ package \latex{float}.
Please refrain from using \latex{float}, as including \verb+\usepackage{float}+ in your document's preamble will most probably result in an error during compilation.

\subsection{Compatibility with the \Rpackage{xtable} R package}

\BiocStyle\ does not support tables produced by the R package \CRANpkg{xtable} in plain \Sweave\ documents.
This limitation does not apply to \knitr\ documents. If you would like to 
use \Rpackage{xtable} in your \BiocStyle-enabled document, please consider using \knitr\ instead of \Sweave.

\end{document}
